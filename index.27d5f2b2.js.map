{"mappings":"AGAO,MAAM,EAAU,MAAO,IAC1B,IAAM,EAAW,MAAM,MAAM,0DAA2D,CACtF,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,CACnB,GAAG,CAAS,CACZ,UAAW,IAAI,OAAO,WAAW,EACnC,EACF,GAEA,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,sBAAwB,EAAS,UAAU,EAC7E,OAAO,EAAS,IAAI,EACtB,ECdW,EAAY,UACrB,IAAM,EAAW,MAAM,MAAM,2DAC7B,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,8BAClC,OAAO,EAAS,IAAI,EACtB,EAGW,EAAe,UACxB,IAAM,EAAY,SAAS,cAAc,CAAC,mBAC1C,CAAA,EAAU,SAAS,CAAG,GAEtB,GAAI,CAGF,AAFe,CAAA,MAAM,GAArB,EAEO,OAAO,CAAC,AAAA,IACb,IAAM,EAAO;AACsB,2CAAA,EAAE,EAAM,EAAE,CAAC;AACtC,gBAAA,EAAE,EAAM,KAAK,CAAC,EAAE,EAAE,EAAM,IAAI,CAAC;AAAO,6CAC/B,EAAE,EAAM,KAAK,CAAC;AAAK;AACF;AACgB;AACE;AACzC;AACH,QACJ,CAAC,CACD,EAAU,kBAAkB,CAAC,YAAa,EAC5C,EACF,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,EAAM,OAAO,CAAE,QAC7B,CACF,EE9BW,EAAa,MAAO,IAC7B,IAAM,EAAW,MAAM,MAAM,CAAC,wDAAwD,EAAE,EAAA,CAAI,CAAE,CAC5F,OAAQ,QACV,GAEA,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,qBAClC,OAAO,EAAS,IAAI,EACtB,EDLW,EAAqB,KAChC,SAAS,cAAc,CAAC,oBAAoB,gBAAgB,CAAC,QAAS,MAAO,IAC3E,GAAI,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAe,CAC7C,IAAM,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,eACxB,EAAK,EAAK,OAAO,CAAC,EAAE,CAE1B,GAAI,CACF,MAAM,AAAA,EAAW,GACjB,EAAK,MAAM,GACX,QAAQ,GAAG,CAAC,CAAC,wCAAU,EAAE,EAAG,iEAAW,CAAC,CAC1C,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,EAAM,OAAO,CAAE,QAC7B,CACF,CACF,EACF,EGjBa,EAAW,MAAO,EAAI,KAC/B,IAAM,EAAW,MAAM,MAAM,CAAC,wDAAwD,EAAE,EAAA,CAAI,CAAE,CAC5F,OAAQ,MACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,EACvB,GAEA,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,wBAA0B,EAAS,UAAU,EAC/E,OAAO,EAAS,IAAI,EACtB,EDTF,IAAI,EAAiB,KAEd,MAAM,EAAmB,KAC9B,IAAM,EAAQ,SAAS,cAAc,CAAC,cAChC,EAAW,SAAS,aAAa,CAAC,UAExC,SAAS,cAAc,CAAC,oBAAoB,gBAAgB,CAAC,QAAS,AAAC,IACrE,GAAI,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAa,CAC3C,IAAM,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,eAC9B,EAAiB,EAAK,OAAO,CAAC,EAAE,CAEhC,SAAS,cAAc,CAAC,cAAc,KAAK,CAAG,EAAK,aAAa,CAAC,MAAM,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CACjG,SAAS,cAAc,CAAC,aAAa,KAAK,CAAG,EAAK,aAAa,CAAC,MAAM,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CACvG,SAAS,cAAc,CAAC,cAAc,KAAK,CAAG,EAAK,aAAa,CAAC,KAAK,WAAW,CAAC,OAAO,CAAC,SAAU,IAEpG,EAAM,KAAK,CAAC,OAAO,CAAG,OACxB,CACF,GAEA,EAAS,OAAO,CAAG,IAAM,EAAM,KAAK,CAAC,OAAO,CAAG,OAC/C,OAAO,OAAO,CAAG,AAAC,GAAM,EAAE,MAAM,GAAK,EAAQ,EAAM,KAAK,CAAC,OAAO,CAAG,OAAS,KAE5E,SAAS,cAAc,CAAC,gBAAgB,gBAAgB,CAAC,QAAS,UAChE,IAAM,EAAW,SAAS,cAAc,CAAC,cAAc,KAAK,CACtD,EAAU,SAAS,cAAc,CAAC,aAAa,KAAK,CACpD,EAAW,SAAS,cAAc,CAAC,cAAc,KAAK,CAE5D,GAAI,CAAC,GAAY,CAAC,GAAW,CAAC,EAAU,CACtC,QAAQ,GAAG,CAAC,sBAAuB,SACnC,MACF,CAEA,GAAI,CACF,MAAM,AAAA,EAAS,EAAgB,CAC7B,MAAO,EACP,KAAM,SAAS,GACf,MAAO,CACT,GAEA,IAAM,EAAO,SAAS,aAAa,CAAC,CAAC,qBAAqB,EAAE,EAAe,EAAE,CAAC,CAC9E,CAAA,EAAK,aAAa,CAAC,MAAM,WAAW,CAAG,CAAA,EAAG,EAAS,EAAE,EAAE,EAAQ,CAAC,CAAC,CACjE,EAAK,aAAa,CAAC,KAAK,WAAW,CAAG,CAAC,8BAAM,EAAE,EAAA,CAAU,CAEzD,EAAM,KAAK,CAAC,OAAO,CAAG,OACtB,QAAQ,GAAG,CAAC,6BACd,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,EAAM,OAAO,CAAE,QAC7B,CACF,EACF,EN9CA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,AAAA,ICFA,SAAS,cAAc,CAAC,WAAW,gBAAgB,CAAC,QAAS,MAAO,IAClE,EAAE,cAAc,GAEhB,IAAM,EAAQ,SAAS,cAAc,CAAC,SAAS,KAAK,CAC9C,EAAO,SAAS,cAAc,CAAC,QAAQ,KAAK,CAC5C,EAAQ,SAAS,cAAc,CAAC,SAAS,KAAK,CAEpD,GAAI,CAAC,GAAS,CAAC,GAAQ,CAAC,EAAO,CAC7B,QAAQ,GAAG,CAAC,sBAAuB,SACnC,MACF,CAEA,GAAI,CACF,MAAM,AAAA,EAAQ,CACZ,MAAA,EACA,KAAM,SAAS,GACf,MAAA,EACA,UAAW,IAAI,OAAO,WAAW,EACnC,GAEA,SAAS,cAAc,CAAC,SAAS,KAAK,CAAG,GACzC,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAG,GACxC,SAAS,cAAc,CAAC,SAAS,KAAK,CAAG,GAEzC,MAAM,AAAA,IACN,QAAQ,GAAG,CAAC,CAAC,qCAAO,EAAE,EAAM,sGAAkB,CAAC,CACjD,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,EAAM,OAAO,CAAE,QAC7B,CACF,GDzBA,AAAA,IACA,AAAA,GACF","sources":["<anon>","src/js/index.js","src/js/actions/addMovie.js","src/js/api/addMovie.js","src/js/actions/renderMovie.js","src/js/actions/deleteMovie.js","src/js/api/deleteMovie.js","src/js/actions/editMovie.js","src/js/api/editMovie.js"],"sourcesContent":["const $681c23623b162c9f$export$fb9705de59d96855 = async (movieData)=>{\n    const response = await fetch('https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            ...movieData,\n            createdAt: new Date().toISOString()\n        })\n    });\n    if (!response.ok) throw new Error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0434\\u043E\\u0434\\u0430\\u0432\\u0430\\u043D\\u043D\\u044F: \" + response.statusText);\n    return response.json();\n};\n\n\nconst $018f750463b5b090$export$60e1c8f5f122c5ac = async ()=>{\n    const response = await fetch('https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie');\n    if (!response.ok) throw new Error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0434\\u0430\\u043D\\u0438\\u0445\");\n    return response.json();\n};\nconst $018f750463b5b090$export$1a30573fde3dfc62 = async ()=>{\n    const container = document.getElementById('movies-container');\n    container.innerHTML = '';\n    try {\n        const movies = await $018f750463b5b090$export$60e1c8f5f122c5ac();\n        movies.forEach((movie)=>{\n            const card = `\n          <div class=\"movie-card\" data-id=\"${movie.id}\">\n            <h3>${movie.title} (${movie.year})</h3>\n            <p>\\u{416}\\u{430}\\u{43D}\\u{440}: ${movie.genre}</p>\n            <div class=\"card-actions\">\n              <button class=\"edit-btn\">\\u{417}\\u{43C}\\u{456}\\u{43D}\\u{438}\\u{442}\\u{438}</button>\n              <button class=\"delete-btn\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n            </div>\n          </div>\n        `;\n            container.insertAdjacentHTML('beforeend', card);\n        });\n    } catch (error) {\n        console.log(error.message, 'error');\n    }\n};\n\n\nfunction $431343b38028c245$export$7db0fdb79d1855d8() {\n    document.getElementById('add-btn').addEventListener('click', async (e)=>{\n        e.preventDefault();\n        const title = document.getElementById('title').value;\n        const year = document.getElementById('year').value;\n        const genre = document.getElementById('genre').value;\n        if (!title || !year || !genre) {\n            console.log(\"\\u0417\\u0430\\u043F\\u043E\\u0432\\u043D\\u0456\\u0442\\u044C \\u0432\\u0441\\u0456 \\u043F\\u043E\\u043B\\u044F!\", 'error');\n            return;\n        }\n        try {\n            await (0, $681c23623b162c9f$export$fb9705de59d96855)({\n                title: title,\n                year: parseInt(year),\n                genre: genre,\n                createdAt: new Date().toISOString()\n            });\n            document.getElementById('title').value = '';\n            document.getElementById('year').value = '';\n            document.getElementById('genre').value = '';\n            await (0, $018f750463b5b090$export$1a30573fde3dfc62)();\n            console.log(`\\u{424}\\u{456}\\u{43B}\\u{44C}\\u{43C} \"${title}\" \\u{443}\\u{441}\\u{43F}\\u{456}\\u{448}\\u{43D}\\u{43E} \\u{434}\\u{43E}\\u{434}\\u{430}\\u{43D}\\u{438}\\u{439}!`);\n        } catch (error) {\n            console.log(error.message, 'error');\n        }\n    });\n}\n\n\nconst $e87dd0515dc21b86$export$8d8542dbbc23fe1a = async (id)=>{\n    const response = await fetch(`https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie/${id}`, {\n        method: 'DELETE'\n    });\n    if (!response.ok) throw new Error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u043D\\u044F\");\n    return response.json();\n};\n\n\nconst $3d2d5fa502aa48a2$export$8d3b79c916eef65b = ()=>{\n    document.getElementById('movies-container').addEventListener('click', async (e)=>{\n        if (e.target.classList.contains('delete-btn')) {\n            const card = e.target.closest('.movie-card');\n            const id = card.dataset.id;\n            try {\n                await (0, $e87dd0515dc21b86$export$8d8542dbbc23fe1a)(id);\n                card.remove();\n                console.log(`\\u{424}\\u{456}\\u{43B}\\u{44C}\\u{43C} ID: ${id} \\u{432}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{435}\\u{43D}\\u{438}\\u{439}!`);\n            } catch (error) {\n                console.log(error.message, 'error');\n            }\n        }\n    });\n};\n\n\nconst $08a4ff5138a3e550$export$60832f4899fbf6a1 = async (id, updatedData)=>{\n    const response = await fetch(`https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n    });\n    if (!response.ok) throw new Error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0440\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F: \" + response.statusText);\n    return response.json();\n};\n\n\nlet $c82f367a15352736$var$currentMovieId = null;\nconst $c82f367a15352736$export$b3b4b3f2e632cf7e = ()=>{\n    const modal = document.getElementById('edit-modal');\n    const closeBtn = document.querySelector('.close');\n    document.getElementById('movies-container').addEventListener('click', (e)=>{\n        if (e.target.classList.contains('edit-btn')) {\n            const card = e.target.closest('.movie-card');\n            $c82f367a15352736$var$currentMovieId = card.dataset.id;\n            document.getElementById('edit-title').value = card.querySelector('h3').textContent.split(' (')[0];\n            document.getElementById('edit-year').value = card.querySelector('h3').textContent.match(/\\((\\d+)\\)/)[1];\n            document.getElementById('edit-genre').value = card.querySelector('p').textContent.replace(\"\\u0416\\u0430\\u043D\\u0440: \", '');\n            modal.style.display = 'block';\n        }\n    });\n    closeBtn.onclick = ()=>modal.style.display = 'none';\n    window.onclick = (e)=>e.target === modal ? modal.style.display = 'none' : null;\n    document.getElementById('save-changes').addEventListener('click', async ()=>{\n        const newTitle = document.getElementById('edit-title').value;\n        const newYear = document.getElementById('edit-year').value;\n        const newGenre = document.getElementById('edit-genre').value;\n        if (!newTitle || !newYear || !newGenre) {\n            console.log(\"\\u0417\\u0430\\u043F\\u043E\\u0432\\u043D\\u0456\\u0442\\u044C \\u0432\\u0441\\u0456 \\u043F\\u043E\\u043B\\u044F!\", 'error');\n            return;\n        }\n        try {\n            await (0, $08a4ff5138a3e550$export$60832f4899fbf6a1)($c82f367a15352736$var$currentMovieId, {\n                title: newTitle,\n                year: parseInt(newYear),\n                genre: newGenre\n            });\n            const card = document.querySelector(`.movie-card[data-id=\"${$c82f367a15352736$var$currentMovieId}\"]`);\n            card.querySelector('h3').textContent = `${newTitle} (${newYear})`;\n            card.querySelector('p').textContent = `\\u{416}\\u{430}\\u{43D}\\u{440}: ${newGenre}`;\n            modal.style.display = 'none';\n            console.log(\"\\u0424\\u0456\\u043B\\u044C\\u043C \\u0443\\u0441\\u043F\\u0456\\u0448\\u043D\\u0433\\u043E \\u043E\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u0438\\u0439!\");\n        } catch (error) {\n            console.log(error.message, 'error');\n        }\n    });\n};\n\n\n\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    (0, $018f750463b5b090$export$1a30573fde3dfc62)();\n    (0, $431343b38028c245$export$7db0fdb79d1855d8)();\n    (0, $3d2d5fa502aa48a2$export$8d3b79c916eef65b)();\n    (0, $c82f367a15352736$export$b3b4b3f2e632cf7e)();\n});\n\n\n//# sourceMappingURL=index.27d5f2b2.js.map\n","import { initAddForm } from './actions/addMovie.js';\r\nimport { initDeleteHandlers } from './actions/deleteMovie.js';\r\nimport { initEditHandlers } from './actions/editMovie.js';\r\nimport { renderMovies } from './actions/renderMovie.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  renderMovies();\r\n  initAddForm();\r\n  initDeleteHandlers();\r\n  initEditHandlers();\r\n});","import { addItem } from '../api/addMovie.js';\r\nimport { renderMovies } from './renderMovie.js';\r\n\r\nexport function initAddForm() {\r\n  document.getElementById('add-btn').addEventListener('click', async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const title = document.getElementById('title').value;\r\n    const year = document.getElementById('year').value;\r\n    const genre = document.getElementById('genre').value;\r\n\r\n    if (!title || !year || !genre) {\r\n      console.log('Заповніть всі поля!', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addItem({\r\n        title,\r\n        year: parseInt(year),\r\n        genre,\r\n        createdAt: new Date().toISOString()\r\n      });\r\n      \r\n      document.getElementById('title').value = '';\r\n      document.getElementById('year').value = '';\r\n      document.getElementById('genre').value = '';\r\n      \r\n      await renderMovies();\r\n      console.log(`Фільм \"${title}\" успішно доданий!`);\r\n    } catch (error) {\r\n      console.log(error.message, 'error');\r\n    }\r\n  });\r\n}","export const addItem = async (movieData) => {\r\n    const response = await fetch('https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        ...movieData,\r\n        createdAt: new Date().toISOString()\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Помилка додавання: ' + response.statusText);\r\n    return response.json();\r\n  };","export const getMovies = async () => {\r\n    const response = await fetch('https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie');\r\n    if (!response.ok) throw new Error('Помилка завантаження даних');\r\n    return response.json();\r\n  };\r\n\r\n\r\nexport const renderMovies = async () => {\r\n    const container = document.getElementById('movies-container');\r\n    container.innerHTML = '';\r\n    \r\n    try {\r\n      const movies = await getMovies();\r\n      \r\n      movies.forEach(movie => {\r\n        const card = `\r\n          <div class=\"movie-card\" data-id=\"${movie.id}\">\r\n            <h3>${movie.title} (${movie.year})</h3>\r\n            <p>Жанр: ${movie.genre}</p>\r\n            <div class=\"card-actions\">\r\n              <button class=\"edit-btn\">Змінити</button>\r\n              <button class=\"delete-btn\">Видалити</button>\r\n            </div>\r\n          </div>\r\n        `;\r\n        container.insertAdjacentHTML('beforeend', card);\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message, 'error');\r\n    }\r\n  };","import { deleteItem } from '../api/deleteMovie';\r\n\r\nexport const initDeleteHandlers = () => {\r\n  document.getElementById('movies-container').addEventListener('click', async (e) => {\r\n    if (e.target.classList.contains('delete-btn')) {\r\n      const card = e.target.closest('.movie-card');\r\n      const id = card.dataset.id;\r\n      \r\n      try {\r\n        await deleteItem(id);\r\n        card.remove();\r\n        console.log(`Фільм ID: ${id} видалений!`);\r\n      } catch (error) {\r\n        console.log(error.message, 'error');\r\n      }\r\n    }\r\n  });\r\n};","export const deleteItem = async (id) => {\r\n    const response = await fetch(`https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Помилка видалення');\r\n    return response.json();\r\n  };","import { editItem } from '../api/editMovie';\r\n\r\nlet currentMovieId = null;\r\n\r\nexport const initEditHandlers = () => {\r\n  const modal = document.getElementById('edit-modal');\r\n  const closeBtn = document.querySelector('.close');\r\n  \r\n  document.getElementById('movies-container').addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('edit-btn')) {\r\n      const card = e.target.closest('.movie-card');\r\n      currentMovieId = card.dataset.id;\r\n      \r\n      document.getElementById('edit-title').value = card.querySelector('h3').textContent.split(' (')[0];\r\n      document.getElementById('edit-year').value = card.querySelector('h3').textContent.match(/\\((\\d+)\\)/)[1];\r\n      document.getElementById('edit-genre').value = card.querySelector('p').textContent.replace('Жанр: ', '');\r\n      \r\n      modal.style.display = 'block';\r\n    }\r\n  });\r\n\r\n  closeBtn.onclick = () => modal.style.display = 'none';\r\n  window.onclick = (e) => e.target === modal ? modal.style.display = 'none' : null;\r\n\r\n  document.getElementById('save-changes').addEventListener('click', async () => {\r\n    const newTitle = document.getElementById('edit-title').value;\r\n    const newYear = document.getElementById('edit-year').value;\r\n    const newGenre = document.getElementById('edit-genre').value;\r\n\r\n    if (!newTitle || !newYear || !newGenre) {\r\n      console.log('Заповніть всі поля!', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await editItem(currentMovieId, {\r\n        title: newTitle,\r\n        year: parseInt(newYear),\r\n        genre: newGenre\r\n      });\r\n      \r\n      const card = document.querySelector(`.movie-card[data-id=\"${currentMovieId}\"]`);\r\n      card.querySelector('h3').textContent = `${newTitle} (${newYear})`;\r\n      card.querySelector('p').textContent = `Жанр: ${newGenre}`;\r\n      \r\n      modal.style.display = 'none';\r\n      console.log('Фільм успішнго оновленний!');\r\n    } catch (error) {\r\n      console.log(error.message, 'error');\r\n    }\r\n  });\r\n};","export const editItem = async (id, updatedData) => {\r\n    const response = await fetch(`https://67b4bf82a9acbdb38ed03d48.mockapi.io/movie/movie/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedData)\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Помилка редагування: ' + response.statusText);\r\n    return response.json();\r\n  };"],"names":["$681c23623b162c9f$export$fb9705de59d96855","movieData","response","fetch","method","headers","body","JSON","stringify","createdAt","Date","toISOString","ok","Error","statusText","json","$018f750463b5b090$export$60e1c8f5f122c5ac","$018f750463b5b090$export$1a30573fde3dfc62","container","document","getElementById","innerHTML","movies","forEach","movie","card","id","title","year","genre","insertAdjacentHTML","error","console","log","message","$e87dd0515dc21b86$export$8d8542dbbc23fe1a","$3d2d5fa502aa48a2$export$8d3b79c916eef65b","addEventListener","e","target","classList","contains","closest","dataset","remove","$08a4ff5138a3e550$export$60832f4899fbf6a1","updatedData","$c82f367a15352736$var$currentMovieId","$c82f367a15352736$export$b3b4b3f2e632cf7e","modal","closeBtn","querySelector","value","textContent","split","match","replace","style","display","onclick","window","newTitle","newYear","newGenre","parseInt","preventDefault"],"version":3,"file":"index.27d5f2b2.js.map"}